/* TABLES */

CREATE TABLE CATEGORIES(
    CATEGORY_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TITLE VARCHAR(25),
    DESCRIPTION VARCHAR(150)
);

CREATE TABLE GAMES(
    GAME_ID INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TITLE VARCHAR(25),
    DESCRIPTION VARCHAR(150),
    PLAY_COUNT BIGINT,
    RATING SMALLINT DEFAULT 0 CHECK(RATING >= 0 AND RATING <= 100),
    UNLISTED BOOLEAN NOT NULL,
    RESOURCE_NAME VARCHAR(32),
    PUBLISH_DATE DATE,
    CONSTRAINT UNIQUE_TITLE UNIQUE (TITLE)
);

CREATE TABLE GAME_CATEGORIES(
    GAME_ID INTEGER,
    CATEGORY_ID INTEGER,
    PRIMARY KEY(GAME_ID, CATEGORY_ID),
    FOREIGN KEY(GAME_ID) REFERENCES GAMES(GAME_ID) ON DELETE CASCADE,
    FOREIGN KEY(CATEGORY_ID) REFERENCES CATEGORIES(CATEGORY_ID) ON DELETE CASCADE
);

CREATE TABLE FEATURED_GAMES_LIST(
    GAME_ID INTEGER PRIMARY KEY,
    FOREIGN KEY(GAME_ID) REFERENCES GAMES(GAME_ID) ON DELETE CASCADE
);

CREATE TABLE POPULAR_GAMES_LIST(
    GAME_ID INTEGER PRIMARY KEY,
    FOREIGN KEY(GAME_ID) REFERENCES GAMES(GAME_ID) ON DELETE CASCADE
);

/* SPRING SECURITY TABLES */

CREATE TABLE USERS(
    USERNAME VARCHAR_IGNORECASE(25) NOT NULL PRIMARY KEY,
    PASSWORD VARCHAR_IGNORECASE(60) NOT NULL,
    ENABLED BOOLEAN NOT NULL
);

CREATE TABLE AUTHORITIES(
    USERNAME VARCHAR_IGNORECASE(25) NOT NULL,
    AUTHORITY VARCHAR_IGNORECASE(50) NOT NULL,
    CONSTRAINT FK_AUTHORITIES_USERS FOREIGN KEY(USERNAME) REFERENCES USERS(USERNAME) ON DELETE CASCADE
);

CREATE UNIQUE INDEX IX_AUTH_USERNAME ON AUTHORITIES (USERNAME, AUTHORITY);

/*=======================================*/

CREATE TABLE USER_PROFILE(
    USERNAME VARCHAR_IGNORECASE(25) NOT NULL PRIMARY KEY,
    JOIN_DATE DATE NOT NULL,
    DESCRIPTION VARCHAR(200) NOT NULL,
    PICTURE_NAME VARCHAR(30),
    FOREIGN KEY(USERNAME) REFERENCES USERS(USERNAME) ON DELETE CASCADE
);

CREATE TABLE GAME_RATINGS(
    GAME_ID INTEGER,
    USERNAME VARCHAR_IGNORECASE(25),
    RATING SMALLINT CHECK(RATING >= -1 AND RATING <= 1),
    LAST_PROCESSED_RATING SMALLINT DEFAULT 0 CHECK(LAST_PROCESSED_RATING >= -1 AND LAST_PROCESSED_RATING <= 1),
    RATED_ON TIMESTAMP DEFAULT (CURRENT_TIMESTAMP(0)),
    PRIMARY KEY(GAME_ID, USERNAME),
    FOREIGN KEY(GAME_ID) REFERENCES GAMES(GAME_ID) ON DELETE CASCADE,
    FOREIGN KEY(USERNAME) REFERENCES USERS(USERNAME) ON DELETE CASCADE
);

--Keep count
CREATE TABLE RATINGS_COUNT(
    GAME_ID INTEGER PRIMARY KEY,
    LIKES INTEGER DEFAULT 0 CHECK(LIKES >= 0),
    DISLIKES INTEGER DEFAULT 0 CHECK(DISLIKES >= 0),
    LAST_UPDATE TIMESTAMP DEFAULT (CURRENT_TIMESTAMP(0)),
    FOREIGN KEY(GAME_ID) REFERENCES GAMES(GAME_ID) ON DELETE CASCADE
);

CREATE TABLE COMMENTS(
    USERNAME VARCHAR_IGNORECASE(25),
    GAME_ID INTEGER,
    POSTED_ON TIMESTAMP DEFAULT (CURRENT_TIMESTAMP(0)),
    COMMENT VARCHAR(150),
    PRIMARY KEY(USERNAME,GAME_ID,POSTED_ON),
    FOREIGN KEY(USERNAME) REFERENCES USERS(USERNAME) ON DELETE CASCADE,
    FOREIGN KEY(GAME_ID) REFERENCES GAMES(GAME_ID) ON DELETE CASCADE
);

CREATE INDEX IX_GAME_USER ON COMMENTS (GAME_ID, USERNAME);

CREATE TABLE GAME_PLAY_LOG(
    CLIENT VARCHAR(25),
    GAME_ID INTEGER,
    PLAYED_ON TIMESTAMP DEFAULT (CURRENT_TIMESTAMP(0)),
    PROCESSED BOOLEAN DEFAULT 'FALSE',
    PRIMARY KEY(CLIENT, GAME_ID)
);

/* VIEWS */

CREATE VIEW FEATURED_GAMES AS
    SELECT GAMES.GAME_ID, TITLE, DESCRIPTION, PLAY_COUNT, RATING, UNLISTED, RESOURCE_NAME, PUBLISH_DATE
    FROM GAMES
    RIGHT JOIN FEATURED_GAMES_LIST
    ON GAMES.GAME_ID = FEATURED_GAMES_LIST.GAME_ID;
    
CREATE VIEW POPULAR_GAMES AS
    SELECT GAMES.GAME_ID, TITLE, DESCRIPTION, PLAY_COUNT, RATING, UNLISTED, RESOURCE_NAME, PUBLISH_DATE
    FROM GAMES
    RIGHT JOIN POPULAR_GAMES_LIST
    ON GAMES.GAME_ID = POPULAR_GAMES_LIST.GAME_ID
    ORDER BY RATING DESC;
